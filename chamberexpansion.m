function [vc , t_choked, t_subsonic,tau_choked,v_choked0,v_chokedf]=chamberexpansion(time, Co,graph)
global param

R=param.R; %ideal gas constant
Va=param.Va; %Volume of gas reservoir
Ab=param.Atube;
Ac=param.Afinal;
Cp=param.Air.Cp; %air heat capacity
Ta0=param.Air.T0; %initial air temperature
Pa0=param.Air.P0; %initial air pressure
Pc=param.Air.Pf; %final air pressure
M=param.Air.M; %final air pressure

Cv=Cp-R;
gamma=Cp/Cv;
[t,it,itime]=unique(time(:)');
t_subsonic=0;
%% sonic
v_choked0=sqrt(2*gamma*R*Ta0/((gamma+1)*M));
tau_choked=2*Va/(Co*(gamma-1)*Ab*v_choked0)*((gamma+1)/2)^(1/(gamma-1));
t_choked=tau_choked*(sqrt(2/(gamma+1))*(Pa0/Pc)^((gamma-1)/(2*gamma))-1);
v(t<=t_choked)=v_choked0*(1+t(t<=t_choked)/tau_choked).^-1;
Pa(t<=t_choked)=Pa0*(1+t(t<=t_choked)/tau_choked).^(-2*gamma/(gamma-1));
Ta(t<=t_choked)=Ta0*(1+t(t<=t_choked)/tau_choked).^-2;
Tb(t<=t_choked)=Ta0*(2/(gamma+1))*(1+t(t<=t_choked)/tau_choked).^-2;
Pb(t<=t_choked)=Pa0*(2/(gamma+1))^(gamma/(gamma-1))*(1+t(t<=t_choked)/tau_choked).^(-2*gamma/(gamma-1));
 
%% subsonic
if(max(t)>t_choked)
    Tbf=Ta0*(Pc/Pa0)^((gamma-1)/gamma);
    v_chokedf=sqrt(gamma*R*Ta0/M*(Pc/Pa0)^((gamma-1)/gamma));
    dvbdt=@(t,vb)-Co*Ab*gamma*R/(M*Va)*Ta0*(Pc/Pa0)^(1/gamma)* ...
        (M*(gamma-1)/(2*R*gamma*Ta0)*vb.^2+(Pc/Pa0)^((gamma-1)/gamma))^ ...
        ((gamma-2)/(gamma-1))*(1-1*cast(vb<0,'double'));
    [tnum vbnum]=ode45(dvbdt,[t(t>=t_choked)],v_chokedf);
    v(t>=t_choked)=vbnum(:);
    v(v<0)=0;
    Ta(t>=t_choked)=M/(2*Cp)*v(t>=t_choked).^2+Tbf;
    Pa(t>=t_choked)=Pa0*(Ta(t>=t_choked)/Ta0).^(gamma/(gamma-1));
    Tb(t>=t_choked)=Tbf;
    Pb(t>=t_choked)=Pc;   
end
if(nargout>2 || graph)

    t2=t_choked:1e-4:0.2*tau_choked+t_choked;
    Tbf=Ta0*(Pc/Pa0)^((gamma-1)/gamma);
    v_chokedf=sqrt(gamma*R*Ta0/M*(Pc/Pa0)^((gamma-1)/gamma));
    dvbdt=@(t,vb)-Co*Ab*gamma*R/(M*Va)*Ta0*(Pc/Pa0)^(1/gamma)* ...
        (M*(gamma-1)/(2*R*gamma*Ta0)*vb.^2+(Pc/Pa0)^((gamma-1)/gamma))^ ...
        ((gamma-2)/(gamma-1))*(1-1*cast(vb<0,'double'));
    [tnum vbnum]=ode45(dvbdt,t2,v_chokedf);
    t_subsonic=min(t2(vbnum<=0));

end    

%% Change of area
vc=(Pb/Pc).^(1/gamma)*(Ab/Ac).*v;
Tc=Tb.*(Pc./Pb).^((gamma-1)/gamma);
if(graph)
    createfigure(t, v,vc, t_choked,Ta,Tb,Tc, Pa*1e-5, Pb*1e-5)
end
vc=vc(itime);
vc=reshape(vc,size(time));


function createfigure(t, v,vc, t_choked, Ta, Tb,Tc, Pa,Pb)
%CREATEFIGURE(X1, Y1, X2, Y2, YMATRIX1, Y3, YMATRIX2, Y4)
%  X1:  vector of x data
%  Y1:  vector of y data
%  X2:  vector of x data
%  Y2:  vector of y data
%  YMATRIX1:  matrix of y data
%  Y3:  vector of y data
%  YMATRIX2:  matrix of y data
%  Y4:  vector of y data


X1=t*1E3;
Y1=[v;vc];
X2=t_choked*[1 1]*1E3;
Y2=[min(v) max(v)];
YMatrix1=[Ta;Tb;Tc];
Y3=[min(Ta) max(Ta)];
YMatrix2=[Pa; Pb];
Y4=[min(Pa) max(Pa)] ;
%  Auto-generated by MATLAB on 05-Feb-2014 09:38:22
% Create figure
figure1 = figure(10);
clf
set(10,'Color',[1 1 1]);

% Create axes
axes1 = axes('Parent',figure1,'Position',[0.1 0.275 0.225 0.7]);
box(axes1,'on');
hold(axes1,'all');

% Create plot
plot(X1,Y1,'Parent',axes1,'LineWidth',2,'Color',[0 0 0]);

% Create plot
plot(X2,Y2,'Parent',axes1,'LineStyle',':','LineWidth',2,...
    'Color',[0 0 0 ]);
%plot(t,vc,'Parent',axes1,'LineWidth',2,'Color',[0 0 0]);

% Create xlabel
xlabel('Time (ms)');

% Create ylabel
ylabel('Air speed in the throthling point (m/s)');

% Create axes
axes2 = axes('Parent',figure1,'Position',[0.4 0.275 0.225 0.7]);
box(axes2,'on');
hold(axes2,'all');

% Create multiple lines using matrix input to plot
plot1 = plot(X1,YMatrix1,'Parent',axes2,'LineWidth',2,'Color',[0 0 0]);
set(plot1(2),'LineStyle','--','DisplayName','Chamber');

% Create plot
plot(X2,Y3,'Parent',axes2,'LineWidth',2,'LineStyle',':',...
    'Color',[0 0 0]);

% Create xlabel
xlabel('Time (ms)');

% Create ylabel
ylabel('Temperature (K)');

% Create axes
axes3 = axes('Parent',figure1,'Position',[0.7 0.275 0.225 0.7]);
box(axes3,'on');
hold(axes3,'all');

% Create multiple lines using matrix input to plot
plot2 = plot(X1,YMatrix2,'Parent',axes3,'LineWidth',2,'Color',[0 0 0]);
set(plot2(1),'DisplayName','Chamber');
set(plot2(2),'LineStyle','--','DisplayName','Throttling point');

% Create plot
plot(X2,Y4,'Parent',axes3,'LineWidth',2,'LineStyle',':',...
    'Color',[0 0 0 ],...
    'DisplayName','End of choked expansion');

% Create xlabel
xlabel('Time (ms)');

% Create ylabel
ylabel('Pressure (bar)');

% Create legend
legend1 = legend(axes3,'show');
set(legend1,'Orientation','horizontal',...
    'Position',[0.380965556325623 0.028897586431833 0.27066909237922 0.0410958904109589]);




